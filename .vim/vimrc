vim9script
set viminfo+=n~/.vim/viminfo
augroup numbertoggle
  autocmd!
  autocmd BufEnter,FocusGained,InsertLeave,WinEnter * if &nu && mode() != "i" | set rnu   | endif
  autocmd BufLeave,FocusLost,InsertEnter,WinLeave   * if &nu                  | set nornu | endif
augroup END

# Plugin
plug#begin()
Plug 'yegappan/lsp'
Plug 'girishji/vimcomplete'
Plug 'preservim/nerdtree'
Plug 'embark-theme/vim', { 'as': 'embark', 'branch': 'main' }
Plug 'puremourning/vimspector'
plug#end()

# LSP
var lspOpts = {
            aleSupport: v:false,
            autoComplete: v:false,
            autoHighlight: v:false,
            autoHighlightDiags: v:true,
            autoPopulateDiags: v:true,
            completionMatcher: 'case',
            completionMatcherValue: 1,
            diagSignErrorText: 'E>',
            diagSignHintText: 'H>',
            diagSignInfoText: 'I>',
            diagSignWarningText: 'W>',
            echoSignature: v:false,
            hideDisabledCodeActions: v:false,
            highlightDiagInline: v:true,
            hoverInPreview: v:false,
            ignoreMissingServer: v:false,
            keepFocusInDiags: v:false,
            keepFocusInReferences: v:true,
            completionTextEdit: v:true,
            diagVirtualTextAlign: 'above',
            diagVirtualTextWrap: 'default',
            noNewlineInCompletion: v:true,
            omniComplete: v:null,
            outlineOnRight: v:false,
            outlineWinSize: 20,
            semanticHighlight: v:true,
            showDiagInBalloon: v:true,
            showDiagInPopup: v:true,
            showDiagOnStatusLine: v:false,
            showDiagWithSign: v:true,
            showDiagWithVirtualText: v:false,
            showInlayHints: v:true,
            showSignature: v:true,
            snippetSupport: v:false,
            ultisnipsSupport: v:false,
            useBufferCompletion: v:false,
            usePopupInCodeAction: v:true,
            useQuickfixForLocations: v:false,
            vsnipSupport: v:false,
            bufferCompletionTimeout: 100,
            customCompletionKinds: v:false,
            completionKinds: {},
            filterCompletionDuplicates: v:false,
	  }

autocmd User LspSetup call LspOptionsSet(lspOpts)

var lspServers = [{
 	 	  name: 'clang',
 	 	  filetype: ['c', 'cpp'],
	 	  path: '/usr/bin/clangd',
	 	  args: ['--background-index']
  }]

autocmd User LspSetup call LspAddServer(lspServers)
g:vimcomplete_tab_enable = 1

# VimComplete

var vcoptions = {
    completor: { noNewlineInCompletionEver: true },
    buffer: { enable: true, priority: 10, urlComplete: true, envComplete: true },
    lsp: { enable: true, priority: 10, maxCount: 5 },
}

autocmd VimEnter * call g:VimCompleteOptionsSet(vcoptions)
# ShortKey
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l
nnoremap <leader>n :NERDTreeFocus<CR>
nnoremap <C-n> :NERDTree<CR>
nnoremap <C-t> :NERDTreeToggle<CR>
nnoremap <C-f> :NERDTreeFind<CR>

# Theme 

set incsearch
set smartcase
set wildmenu

set noerrorbells
set novisualbell
set t_vb=
set tm=500

set cursorline
set cursorlineopt=number

syntax enable

if $COLORTERM == 'gnome-terminal'
    set t_Co=256
endif
set termguicolors
colorscheme embark
set number
set smarttab
set ai
set si
set wrap
set virtualedit=all
set noendofline
set tabstop=4
set softtabstop=4
set shiftwidth=4
set noexpandtab



